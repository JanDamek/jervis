[versions]
kotlin = "2.2.0"
spring-boot = "3.5.6"
spring-depMgmt = "1.1.6"
coroutines = "1.9.0"
serialization = "1.7.3"
ktor = "3.3.0"
logging = "3.0.5"
qdrant = "1.14.0"
grpc = "1.68.1"
commons-text = "1.12.0"
javaparser = "3.25.8"
jsoup = "1.17.2"
tika = "2.9.1"
java-diff-utils = "4.12"
guava = "33.4.1-jre"
flatlaf = "3.6.1"
springdoc = "2.8.9"
joern = "2.0.0"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }

# KotlinX
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Spring & Boot
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-starter-data-mongodb-reactive = { module = "org.springframework.boot:spring-boot-starter-data-mongodb-reactive" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }

# Mongo
mongodb-bson = { module = "org.mongodb:bson" }

# HTTP (Ktor)
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Logging
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "logging" }
logback-classic = { module = "ch.qos.logback:logback-classic" }
slf4j-api = { module = "org.slf4j:slf4j-api" }

# Jackson
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml" }

# Qdrant & gRPC
qdrant-client = { module = "io.qdrant:client", version.ref = "qdrant" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-netty-shaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }

# Netty native DNS resolver for macOS (version managed by Spring BOM)
netty-resolver-dns-native-macos = { module = "io.netty:netty-resolver-dns-native-macos" }

# Misc libs
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }
springdoc-openapi-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springdoc" }
javaparser-core = { module = "com.github.javaparser:javaparser-core", version.ref = "javaparser" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
tika-core = { module = "org.apache.tika:tika-core", version.ref = "tika" }
tika-parsers-standardpkg = { module = "org.apache.tika:tika-parsers-standard-package", version.ref = "tika" }
java-diff-utils = { module = "io.github.java-diff-utils:java-diff-utils", version.ref = "java-diff-utils" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api" }
flatlaf = { module = "com.formdev:flatlaf", version.ref = "flatlaf" }

# Testing
junit-bom = { module = "org.junit:junit-bom" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-depMgmt" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
